<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Doctor Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-100 min-h-screen flex flex-col">

    <!-- Header Section -->
    <header class="bg-blue-600 text-white p-4 shadow-md">
        <div class="container mx-auto flex justify-between items-center">
            <h1 class="text-2xl font-bold">Doctor Dashboard</h1>
            <nav>
                <ul class="flex space-x-4">
                    <li><a href="/doctors" class="hover:underline">Available Doctors</a></li>
                    <li><a href="/logout" class="hover:underline">Logout</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <!-- Main Content Section -->
    <main class="container mx-auto mt-10 flex-grow">
        <div class="flex py-4 bg-lime-100 justify-center items-center">
            <img src="/doctor-profile/<%= doctor._id %>/profile-picture" alt="Profile Photo"
                class="w-32 h-32 rounded-full ml-12">
            <h2 class="text-3xl font-bold text-center ml-16">Welcome, <%= doctor.fullName %>!</h2>
        </div>
        <p class="text-center text-gray-700 mt-6 mb-10">Manage your schedule, view appointments, and more from here.</p>

        <!-- Doctor's Personal Information -->
        <div class="bg-white shadow-md rounded-lg p-6 mb-8">
            <h3 class="text-xl font-semibold mb-4">Doctor Information</h3>
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <p><strong>Name:</strong> <%= doctor.fullName %></p>
                    <p><strong>Contact:</strong> <%= doctor.contact %></p>
                    <p><strong>Age:</strong> <%= doctor.age %></p>
                    <p><strong>Email:</strong> <%= doctor.email %></p>
                    <p><strong>Department:</strong> <%= doctor.department %></p>
                </div>
                <div>
                    <p><strong>Hospital:</strong> <%= doctor.hospital %></p>
                    <p><strong>Experience:</strong> <%= doctor.experience %> years</p>
                    <p><strong>Status:</strong> <%= doctor.status %></p>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">

            <div class="bg-white shadow-md rounded-lg p-6">
                <h3 class="text-xl font-semibold mb-4">Update Availability</h3>
                <p class="text-gray-700 mb-4">Toggle your availability status.</p>
                <button id="availability-btn" class="px-4 py-2 rounded-lg text-white 
                    <%= doctor.status === 'Available' ? 'bg-green-500 hover:bg-green-600' : 'bg-red-500 hover:bg-red-600' %>">
                    <%= doctor.status==='Available' ? 'Available' : 'Unavailable' %>
                </button>

                <p id="status-text" class="mt-2 text-sm text-gray-600">Current Status: <%= doctor.status
                        || 'Unavailable' %>
                </p>
            </div>
            
            <div class="bg-white shadow-md rounded-lg p-6 w-full">
                <h3 class="text-xl font-semibold mb-4">Appointment Requests</h3>
                <p class="text-gray-700 mb-4">View and manage incoming appointment requests from patients.</p>
            
                <!-- Appointment Cards Container -->
                <div id="appointments-list" class="flex gap-4 overflow-x-auto">
                    <p class="text-gray-500">Loading appointments...</p>
                </div>
            </div>

            <!-- Profile Management -->
            <div class="bg-white shadow-md rounded-lg p-6">
                <h3 class="text-xl font-semibold mb-4">Profile Management</h3>
                <p class="text-gray-700 mb-4">Update your profile details and availability.</p>
                <a href="/profile" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600">Update
                    Profile</a>
            </div>

            <!-- Patient Records -->
            <div class="bg-white shadow-md rounded-lg p-6">
                <h3 class="text-xl font-semibold mb-4">Patient Records</h3>
                <p class="text-gray-700 mb-4">Access and manage patient medical records securely.</p>
                <a href="/records" class="bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600">View
                    Records</a>
            </div>
                     
        </div>
    </main>

    <!-- Footer Section -->
    <footer class="mt-auto bg-gray-800 text-white text-center py-4">
        <p>&copy; 2025 Book My Ambulance. All rights reserved.</p>
    </footer>

    <script>
        document.getElementById("availability-btn").addEventListener("click", function () {
            const button = this;
            const currentStatus = button.innerText;  // 'Available' or 'Unavailable'
            const newStatus = currentStatus === "Unavailable" ? "Available" : "Unavailable";  // Toggle the status
            const socket = io();

            // Update the button's text and color based on the new status
            button.innerText = newStatus;
            button.classList.toggle("bg-green-500");
            button.classList.toggle("bg-red-500");
            button.classList.toggle("hover:bg-green-600");
            button.classList.toggle("hover:bg-red-600");
    
            // Make an AJAX request to update the status on the server
            fetch("/doctor/update-status", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ status: newStatus })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update the status text on the page
                    document.getElementById("status-text").innerText = `Status: ${newStatus}`;
                    const statusSpan = document.querySelector("#status-text span");
                    statusSpan.innerText = newStatus;
                    statusSpan.classList.toggle("text-green-600", newStatus === "Available");
                    statusSpan.classList.toggle("text-red-600", newStatus === "Unavailable");
                } else {
                    // If there was an error, reset the button
                    alert("Failed to update status.");
                    button.innerText = currentStatus;
                    button.classList.toggle("bg-green-500");
                    button.classList.toggle("bg-red-500");
                }
            })
            .catch(error => console.error("Error updating status:", error));
        });

        document.addEventListener("DOMContentLoaded", async () => {
            const appointmentsList = document.getElementById("appointments-list");
        
            try {
                const response = await fetch("/api/appointments");
                const appointments = await response.json();
                appointmentsList.innerHTML = "";
        
                if (appointments.length === 0) {
                    appointmentsList.innerHTML = "<p class='text-gray-500'>No appointments yet.</p>";
                } else {
                    appointments.forEach(appointment => {
                        const appointmentDiv = document.createElement("div");
                        appointmentDiv.className = "p-4  bg-gray-100 rounded-lg mb-2 flex justify-between items-center";
        
                        // Format date and time
                        const formattedDate = new Date(appointment.date).toLocaleDateString();  // Format date
        
                        appointmentDiv.innerHTML = `
                            <div class="w-[250px]">
                                <p><strong>Patient:</strong> ${appointment.patientName}</p>
                                <p><strong>Age:</strong> ${appointment.age}</p>
                                <p><strong>Contact:</strong> ${appointment.contact}</p>
                                <p><strong>Date:</strong> ${formattedDate}</p> <!-- Show formatted date -->
                                <p><strong>Slot Time:</strong> ${appointment.time}</p> <!-- Show formatted time -->
                                <p><strong>Status:</strong> 
                                    <span class="${appointment.status === 'Pending' ? 'text-yellow-600' : 'text-green-600'}">
                                        ${appointment.status}
                                    </span>
                                </p>
                            </div>
                            <div id="buttons-${appointment._id}">
                                ${appointment.status === "Pending" ? `
                                    <button class="accept-btn bg-green-500 text-white px-3 py-1 rounded-lg hover:bg-green-600 " 
                                            data-id="${appointment._id}">Accept</button>
                                    <button class="decline-btn bg-red-500 text-white px-3 py-1 rounded-lg hover:bg-red-600 mt-3" 
                                            data-id="${appointment._id}">Decline</button>
                                ` : `<p class="text-green-600 font-bold">${appointment.status}</p>`}
                            </div>
                        `;
        
                        appointmentsList.appendChild(appointmentDiv);
                    });
        
                    // Attach event listeners for accept/decline buttons
                    document.querySelectorAll(".accept-btn").forEach(button => {
                        button.addEventListener("click", async () => {
                            await updateAppointmentStatus(button.dataset.id, "Accepted");
                        });
                    });
        
                    document.querySelectorAll(".decline-btn").forEach(button => {
                        button.addEventListener("click", async () => {
                            await updateAppointmentStatus(button.dataset.id, "Declined");
                        });
                    });
                }
            } catch (error) {
                console.error("Error fetching appointments:", error);
                appointmentsList.innerHTML = "<p class='text-red-500'>Failed to load appointments.</p>";
            }
        });
        
        
        
        async function updateAppointmentStatus(id, status) {
            try {
                const response = await fetch(`/api/update-appointment/${id}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ status })
                });
        
                const result = await response.json();
                if (result.success) {
                    alert(`Appointment ${status.toLowerCase()} successfully!`);
        
                    // Emit socket event after successful update
                    const socket = io();
                    socket.emit("updateAppointment", { appointmentId: id, status });
        
                    // Update UI dynamically
                    const buttonsDiv = document.getElementById(`buttons-${id}`);
                    buttonsDiv.innerHTML = `<p class="text-green-600 font-bold">${status}</p>`;
                } else {
                    alert("Failed to update appointment status.");
                }
            } catch (error) {
                console.error("Error updating appointment:", error);
            }
        }
        
        socket.on("connect", () => {
            console.log("Connected to server via Socket.io:", socket.id);
        });
        
    </script>

</body>

</html>
