<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Available Doctors</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-100 min-h-screen flex flex-col">

    <!-- Header -->
    <div class="container mx-auto mt-10">
        <h1 class="text-3xl font-bold text-center mb-8">
           
            <% if (department) { %>
                Available <%= department %> Doctors
                    <% } else { %>
                        All Available Doctors
                        <% } %>
        </h1>

        <!-- Doctors List -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            <% doctors.forEach(doctor=> { %>
                <div class="bg-white shadow-md rounded-lg p-6">
                    <div class="flex items-center mb-4">
                        <img src="/doctor-profile/<%= doctor._id %>/profile-picture" alt="Profile Photo"
                            class="w-32 h-32 rounded-full mr-8">
                        <div>
                            <h2 class="text-xl font-semibold">
                                <%= doctor.fullName %>
                            </h2>
                            <p class="text-gray-600">Specialty: <%= doctor.department %>
                            </p>
                        </div>
                    </div>
                    <p class="text-gray-700 mb-2">Hospital/Clinic: <%= doctor.hospital %>
                    </p>
                    <p class="text-gray-700 mb-4">Contact: <%= doctor.contact %>
                    </p>
                    <p class="text-gray-700">Status:
                        <span class="<%= doctor.status === 'Available' ? 'text-green-600' : 'text-red-600' %>">
                            <%= doctor.status || 'Unavailable' %>
                        </span>
                    </p>

                    <button class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 book-btn"
                        data-doctor-id="<%= doctor._id %>" data-doctor-name="<%= doctor.fullName %>">
                        Book Appointment
                    </button>
                </div>
                <% }) %>
        </div>
    </div>

    <!-- Modal for Booking Appointment -->
    <div id="modal" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden flex justify-center items-center">
        <div class="bg-white p-6 rounded-lg shadow-lg w-96">
            <h2 class="text-xl font-semibold mb-4" id="doctor-name"></h2>

            <!-- Patient Info Form -->
            <form id="appointment-form" class="space-y-4 mb-4">
                <div>
                    <label for="patient-name" class="block text-gray-700">Patient Name</label>
                    <input type="text" id="patient-name" name="patientName" class="w-full px-4 py-2 border rounded-md"
                        required>
                </div>
                <div>
                    <label for="contact" class="block text-gray-700">Contact Number</label>
                    <input type="number" id="contact" name="contact" class="w-full px-4 py-2 border rounded-md"
                        required>
                </div>
                <div>
                    <label for="age" class="block text-gray-700">Age</label>
                    <input type="number" id="age" name="age" class="w-full px-4 py-2 border rounded-md" required>
                </div>
            </form>

            <p class="mb-4">Select an available slot:</p>
            <div id="slots-container" class="space-y-2">
                <!-- Slots will be added dynamically -->
            </div>

            <div class="mt-4 flex justify-end">
                <button id="close-modal" class="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 mr-2">
                    Cancel
                </button>
                <button id="confirm-appointment"
                    class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 hidden">
                    Confirm
                </button>
            </div>
        </div>
    </div>

    <!-- Footer with Contact Us -->
    <footer class="mt-auto bg-gray-800 text-white text-center py-4">
        <p>Need help? <a href="/contact-us" class="underline text-blue-400">Contact Us</a></p>
    </footer>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const modal = document.getElementById("modal");
            const doctorNameElem = document.getElementById("doctor-name");
            const slotsContainer = document.getElementById("slots-container");
            const confirmButton = document.getElementById("confirm-appointment");
            let selectedSlot = null;
            let selectedDoctorId = null;

            // Function to fetch and display available slots
            const loadSlots = async (doctorId) => {
                console.log("Fetching slots for Doctor ID:", doctorId);
                slotsContainer.innerHTML = "<p>Loading slots...</p>";

                try {
                    const response = await fetch(`/api/doctors/${doctorId}/available-slots`);
                    if (!response.ok) throw new Error("Failed to fetch slots");

                    const slots = await response.json();
                    console.log("Received slots:", slots);

                    slotsContainer.innerHTML = ""; // Clear previous slots

                    if (slots.length === 0) {
                        slotsContainer.innerHTML = "<p class='text-red-500'>No available slots.</p>";
                        confirmButton.classList.add("hidden");
                        return;
                    }

                    slots.forEach(slot => {
                        const button = document.createElement("button");
                        button.className = "slot-btn bg-gray-200 px-3 py-2 rounded-lg hover:bg-gray-300 w-full";
                        button.textContent = slot;
                        button.dataset.slot = slot;

                        button.addEventListener("click", () => {
                            document.querySelectorAll(".slot-btn").forEach(btn => btn.classList.remove("bg-blue-500", "text-white"));
                            button.classList.add("bg-blue-500", "text-white");
                            selectedSlot = slot;
                            confirmButton.classList.remove("hidden");
                        });

                        slotsContainer.appendChild(button);
                    });
                } catch (error) {
                    console.error("Error fetching slots:", error);
                    slotsContainer.innerHTML = "<p class='text-red-500'>Error loading slots.</p>";
                }
            };

            // Show modal when "Book Appointment" is clicked
            document.querySelectorAll('.book-btn').forEach(button => {
                button.addEventListener('click', function () {
                    selectedDoctorId = this.getAttribute('data-doctor-id');  // Set selectedDoctorId here
                    const doctorName = this.getAttribute('data-doctor-name');

                    doctorNameElem.innerText = `Book Appointment with Dr. ${doctorName}`;
                    document.getElementById('appointment-form').setAttribute('data-doctor-id', selectedDoctorId);
                    modal.classList.remove('hidden');

                    // Fetch slots for the selected doctor
                    loadSlots(selectedDoctorId);
                });
            });

            document.getElementById('appointment-form').addEventListener('submit', async function (event) {
                event.preventDefault();
                const form = event.target;
                const doctorId = form.getAttribute('data-doctor-id');

                const formData = new FormData(form);
                formData.append('doctorId', doctorId);

                const response = await fetch('/api/book', {
                    method: 'POST',
                    body: new URLSearchParams(formData)
                });

                const result = await response.json();
                if (result.success) {
                    alert("Appointment booked successfully!");
                    window.location.reload();
                } else {
                    alert(result.message);
                }
            });

            // Close modal
            document.getElementById("close-modal").addEventListener("click", () => {
                modal.classList.add("hidden");
                confirmButton.classList.add("hidden");
                selectedSlot = null;
                selectedDoctorId = null;
                slotsContainer.innerHTML = ""; // Reset slots
            });

            // Confirm appointment
            // Confirm appointment
            confirmButton.addEventListener("click", async () => {
                console.log("Confirm button clicked! Sending request...");

                const patientName = document.getElementById("patient-name").value.trim();
                const contact = document.getElementById("contact").value.trim();
                const age = document.getElementById("age").value.trim();

                const patientId = "<%= user && user._id ? user._id : '' %>";
                if (!patientId) {
                    alert("You must be logged in to book an appointment.");
                    return;
                }
                if (!selectedSlot) {
                    alert("Please select a time slot.");
                    return;
                }

                try {
                    const formattedDate = new Date().toLocaleDateString("en-US"); 
                
                    const response = await fetch(`/api/book`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                            doctorId: selectedDoctorId,
                            patientId,  // Pass user ID if logged in
                            patientName,
                            contact,
                            age,
                            date: formattedDate,  // Avoids GMT format
                            time: selectedSlot
                        })
                    });
                

                    const result = await response.json();
                    console.log("Server Response:", result); // Debugging

                    if (result.success) {
                        alert("Appointment booked successfully!");
                        modal.classList.add("hidden");
                        window.location.reload();
                    } else {
                        alert(result.message || "Failed to book appointment.");
                    }
                } catch (error) {
                    console.error("Error booking appointment:", error);
                    alert("An error occurred while booking the appointment.");
                }
            });

        });

    </script>


</body>

</html>